<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is Metro/2.3.2-b608 (trunk-7979; 2015-01-21T12:50:19+0000) JAXWS-RI/2.2.11-b150120.1832 JAXWS-API/2.2.12 JAXB-RI/2.2.12-b141219.1637 JAXB-API/2.2.13-b141020.1521 svn-revision#unknown. --><xs:schema xmlns:tns="http://question.model/" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0" targetNamespace="http://question.model/">

<xs:element name="Question" type="tns:question"/>

<xs:element name="SQLException" type="tns:SQLException"/>

<xs:element name="addQuestion" type="tns:addQuestion"/>

<xs:element name="addQuestionResponse" type="tns:addQuestionResponse"/>

<xs:element name="deleteQuestion" type="tns:deleteQuestion"/>

<xs:element name="deleteQuestionResponse" type="tns:deleteQuestionResponse"/>

<xs:element name="getAllQuestions" type="tns:getAllQuestions"/>

<xs:element name="getAllQuestionsResponse" type="tns:getAllQuestionsResponse"/>

<xs:element name="getQuestionByID" type="tns:getQuestionByID"/>

<xs:element name="getQuestionByIDResponse" type="tns:getQuestionByIDResponse"/>

<xs:element name="updateQuestion" type="tns:updateQuestion"/>

<xs:element name="updateQuestionResponse" type="tns:updateQuestionResponse"/>

<xs:complexType name="getQuestionByID">
<xs:sequence>
<xs:element name="id" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getQuestionByIDResponse">
<xs:sequence>
<xs:element name="Question" type="tns:question" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="question">
<xs:sequence>
<xs:element name="id" type="xs:int"/>
<xs:element name="id_user" type="xs:int"/>
<xs:element name="topic" type="xs:string"/>
<xs:element name="content" type="xs:string"/>
<xs:element name="votes" type="xs:int"/>
<xs:element name="date" type="xs:string"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="SQLException">
<xs:sequence>
<xs:element name="SQLState" type="xs:string" minOccurs="0"/>
<xs:element name="errorCode" type="xs:int"/>
<xs:element name="message" type="xs:string" minOccurs="0"/>
<xs:element name="nextException" type="tns:sqlException" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="sqlException">
<xs:complexContent>
<xs:extension base="tns:exception">
<xs:sequence>
<xs:element name="nextException" type="tns:sqlException" minOccurs="0"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="exception">
<xs:complexContent>
<xs:extension base="tns:throwable">
<xs:sequence/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="throwable">
<xs:sequence>
<xs:element name="stackTrace" type="tns:stackTraceElement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="stackTraceElement" final="extension restriction">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="updateQuestion">
<xs:sequence>
<xs:element name="id" type="xs:int"/>
<xs:element name="topic" type="xs:string" minOccurs="0"/>
<xs:element name="content" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="updateQuestionResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteQuestion">
<xs:sequence>
<xs:element name="id" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteQuestionResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getAllQuestions">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="getAllQuestionsResponse">
<xs:sequence>
<xs:element name="return" type="tns:question" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="addQuestion">
<xs:sequence>
<xs:element name="id_user" type="xs:int"/>
<xs:element name="topic" type="xs:string" minOccurs="0"/>
<xs:element name="content" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="addQuestionResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
</xs:schema>